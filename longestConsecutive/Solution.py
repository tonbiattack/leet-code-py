class Solution:
    def longestConsecutive(self, nums):
        # 数列を集合に変換し、重複を排除します。
        # 集合に変換することで、探索の時間がO(1)になるため、効率的に連続数列を見つけられます。
        nums = set(nums)
        
        # 最長の連続数列の長さを保持する変数を0で初期化
        best = 0

        # 各数字 x を集合から取り出して、ループ処理を行います
        for x in nums:
            # x が数列の先頭かどうかを判定します。
            # 連続する数列の先頭である場合のみ処理を続行します。
            # 先頭である条件は、x-1 が集合に含まれていないことです。
            if x - 1 not in nums:
                # 現在の数列の終端を追跡するために y を x+1 に初期化
                y = x + 1

                # y が nums に含まれている間（つまり連続する数が続いている間）、y を増やし続けます。
                while y in nums:
                    y += 1

                # 現在の連続する数列の長さ (y - x) が、今までの最長の長さよりも長ければ更新
                best = max(best, y - x)

        # 最終的に最長の連続する数列の長さを返します
        return best

# インスタンスを生成
sol = Solution()

# テストケース
nums = [100, 4, 200, 1, 3, 2]

# メソッドを呼び出し、結果を表示
print(sol.longestConsecutive(nums))  # 期待する出力は 4 (連続する数列: 1, 2, 3, 4)
